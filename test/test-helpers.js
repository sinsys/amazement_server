// const bcrypt = require('bcryptjs');
// const jwt = require('jsonwebtoken');

// Truncate all tables and restart identities for database
const cleanTables = (db) => {
  return db.transaction(trx =>
    trx.raw(
      `TRUNCATE
        users,
        settings,
        games
      `
    )
    .then(() =>
      Promise.all([
        trx.raw(`ALTER SEQUENCE users_id_seq minvalue 0 START WITH 1`),
        trx.raw(`ALTER SEQUENCE settings_id_seq minvalue 0 START WITH 1`),
        trx.raw(`ALTER SEQUENCE games_id_seq minvalue 0 START WITH 1`),
        trx.raw(`SELECT setval('users_id_seq', 0)`),
        trx.raw(`SELECT setval('settings_id_seq', 0)`),
        trx.raw(`SELECT setval('games_id_seq', 0)`)
      ])
    )
  );
};

// Create dummy users for our tests
const makeUsersArray = () => {
  return [
    {
      id: 1,
      user_name: 'test-user-1',
      display_name: 'test-display-name-1',
      password: 'test-password'
    },
    {
      id: 2,
      user_name: 'test-user-2',
      display_name: 'test-display-name-2',
      password: 'test-password2'
    }
  ];
};

// Create dummy settings for our tests
const makeSettingsArray = (users) => {
  return [
    {
      id: 1,
      user_id: users[0].id,
      character: 'test-character'
    },
    {
      id: 2,
      user_id: users[1].id,
      character: 'test-character-2'
    }
  ]
};

// Create dummy games for our tests
const makeGamesArray = (users) => {
  return [
    {
      id: 1,
      uuid: '30df3162-02f1-4f35-823b-5eabe5f46544',
      size: 15,
      maze: '[[[0,1,1,0],[0,0,1,1],[0,1,1,0],[0,1,0,1],[0,1,0,1],[0,0,1,1],[0,1,1,0],[0,1,0,1],[0,1,0,1],[0,1,0,1],[0,1,0,1],[0,1,1,1],[0,1,0,1],[0,1,0,1],[0,0,1,1]],[[1,0,1,0],[1,0,1,0],[1,0,1,0],[0,1,0,0],[0,0,1,1],[1,1,0,0],[1,0,0,1],[0,1,1,0],[0,0,0,1],[0,1,1,0],[0,1,0,1],[1,0,0,1],[0,0,1,0],[0,1,1,0],[1,0,0,1]],[[1,0,0,0],[1,0,1,0],[1,1,0,0],[0,0,1,1],[1,1,1,0],[0,1,0,1],[0,1,0,1],[1,0,0,1],[0,1,1,0],[1,0,0,1],[0,1,0,0],[0,1,1,1],[1,0,1,1],[1,1,0,0],[0,0,1,1]],[[0,1,1,0],[1,0,0,1],[0,1,1,0],[1,0,0,1],[1,0,1,0],[0,1,1,0],[0,1,0,1],[0,1,0,1],[1,0,0,1],[0,1,1,0],[0,0,1,1],[1,0,1,0],[1,1,0,0],[0,1,0,1],[1,0,0,1]],[[1,0,1,0],[0,1,1,0],[1,0,0,1],[0,1,1,0],[1,0,0,1],[1,1,0,0],[0,1,0,1],[0,1,0,1],[0,0,1,1],[1,0,1,0],[1,0,1,0],[1,1,0,0],[0,1,0,1],[0,1,0,1],[0,0,0,1]],[[1,0,1,0],[1,0,1,0],[0,0,1,0],[1,1,1,0],[0,1,0,1],[0,1,1,1],[0,1,0,1],[0,0,1,1],[1,1,0,0],[1,0,0,1],[1,0,1,0],[0,1,1,0],[0,1,0,1],[0,1,0,1],[0,0,1,1]],[[1,1,1,0],[1,0,0,1],[1,0,1,0],[1,1,0,0],[0,0,1,1],[1,1,0,0],[0,0,1,1],[1,0,1,0],[0,1,1,0],[0,0,1,1],[1,0,1,0],[1,1,0,0],[0,0,1,1],[0,1,1,0],[1,0,1,1]],[[1,1,0,0],[0,0,1,1],[1,1,0,0],[0,1,0,1],[1,0,0,1],[0,1,1,0],[1,0,0,1],[1,0,1,0],[1,0,0,0],[1,0,1,0],[1,0,1,0],[0,1,1,0],[1,0,0,1],[1,0,1,0],[1,0,1,0]],[[0,0,1,0],[1,1,0,0],[0,1,0,1],[0,1,0,1],[0,1,0,1],[1,0,0,1],[0,1,1,0],[1,1,0,1],[0,1,0,1],[1,0,0,1],[1,1,1,0],[1,0,0,1],[0,0,1,0],[1,0,1,0],[1,0,0,0]],[[1,1,1,0],[0,1,0,1],[0,0,1,1],[0,1,1,0],[0,1,0,1],[0,1,0,1],[1,0,0,1],[0,1,1,0],[0,1,0,1],[0,0,1,1],[1,0,1,0],[0,1,0,0],[1,0,1,1],[1,1,0,0],[0,0,1,1]],[[1,1,0,0],[0,0,0,1],[1,0,1,0],[1,1,0,0],[0,0,1,1],[0,1,1,0],[0,0,1,1],[1,1,0,0],[0,0,1,1],[1,0,1,0],[1,0,1,0],[0,1,1,0],[1,0,1,1],[0,0,1,0],[1,0,1,0]],[[0,1,1,0],[0,1,0,1],[1,1,0,1],[0,0,1,1],[1,0,1,0],[1,0,1,0],[1,0,1,0],[0,1,1,0],[1,0,0,1],[1,0,1,0],[1,1,0,0],[1,0,0,1],[1,1,0,0],[1,0,0,1],[1,0,1,0]],[[1,1,1,0],[0,1,0,1],[0,0,1,1],[1,0,1,0],[1,0,1,0],[1,0,1,0],[1,0,0,0],[1,0,1,0],[0,0,1,0],[1,0,1,0],[0,1,1,0],[0,1,0,1],[0,1,0,1],[0,0,1,1],[1,0,1,0]],[[1,0,1,0],[0,1,1,0],[1,0,0,1],[1,0,0,0],[1,0,1,0],[1,1,0,0],[0,0,1,1],[1,0,1,0],[1,0,1,0],[1,0,1,0],[1,0,1,0],[0,1,1,0],[0,0,1,1],[1,0,1,0],[1,0,1,0]],[[1,0,0,0],[1,1,0,0],[0,1,0,1],[0,1,0,1],[1,1,0,1],[0,1,0,1],[1,0,0,1],[1,1,0,0],[1,0,0,1],[1,1,0,0],[1,0,0,1],[1,0,0,0],[1,1,0,0],[1,1,0,1],[1,0,0,1]]]',
      player_path: '[[0,0],[1,0],[2,0],[3,0],[4,0],[5,0],[5,1],[6,1],[6,2],[6,3],[7,3],[7,4],[6,4],[6,5],[6,6],[5,6],[5,5],[4,5],[4,4],[5,4],[5,3],[5,2],[4,2],[4,3],[3,3],[3,4],[3,5],[3,6],[3,7],[4,7],[4,8],[4,9],[4,10],[5,10],[5,9],[6,9],[6,10],[7,10],[7,9],[7,8],[6,8],[6,7],[7,7],[6,7],[6,8],[7,8],[7,9],[7,10],[6,10],[6,9],[5,9],[5,10],[4,10],[4,9],[4,8],[4,7],[3,7],[3,6],[3,5],[3,4],[3,3],[4,3],[4,2],[5,2],[5,3],[5,4],[4,4],[4,5],[5,5],[5,6],[6,6],[6,5],[6,4],[7,4],[7,3],[6,3],[6,2],[6,1],[5,1],[5,0],[4,0],[3,0],[2,0],[1,0],[0,0],[1,0],[1,1],[2,1],[2,2],[1,2],[1,3],[0,3],[0,4],[1,4],[2,4],[2,5],[1,5],[0,5],[0,6],[0,7],[1,7],[1,8],[2,8],[3,8],[3,9],[3,10],[3,11],[4,11],[5,11],[5,12],[6,12],[6,11],[7,11],[8,11],[8,10],[8,9],[9,9],[9,10],[9,11],[10,11],[11,11],[11,10],[10,10],[10,9],[10,8],[10,7],[10,6],[9,6],[9,5],[10,5],[11,5],[11,4],[10,4],[9,4],[9,3],[8,3],[8,2],[7,2],[7,1],[7,0],[8,0],[9,0],[10,0],[11,0],[11,1],[10,1],[9,1],[9,2],[10,2],[11,2],[11,3],[12,3],[12,4],[13,4],[13,3],[14,3],[14,4],[14,5],[13,5],[13,6],[14,6],[14,7],[14,8],[14,9],[14,10],[14,11],[14,12]]',
      time_started: '2020-04-01T01:19:02.499Z',
      time_ended: '2020-04-01T01:20:02.499Z',
      time_created: '2020-04-01T03:29:18.866Z',
      user_id: users[0].id,
      user_name: 'test-display-name-1',
      difficulty: 'easy'
    },
    {
      id: 2,
      uuid: '30df3162-02f1-4f35-823b-5eabe5f46543',
      size: 20,
      maze: '[[[0,1,1,0],[0,0,1,1],[0,1,1,0],[0,1,0,1],[0,0,1,1],[0,1,1,0],[0,1,0,1],[0,1,1,1],[0,0,1,1],[0,0,1,0],[0,1,1,0],[0,0,1,1],[0,1,1,0],[0,0,1,1],[0,1,0,0],[0,1,0,1],[0,1,1,1],[0,1,0,1],[0,0,1,1],[0,0,1,0]],[[1,0,1,0],[1,0,1,0],[1,0,1,0],[0,0,1,0],[1,1,0,0],[1,1,0,1],[0,0,0,1],[1,0,1,0],[1,0,1,0],[1,1,0,0],[1,0,0,1],[1,0,1,0],[1,0,1,0],[1,1,0,0],[0,1,0,1],[0,1,0,1],[1,0,0,1],[0,0,1,0],[1,1,0,0],[1,0,1,1]],[[1,0,1,0],[1,0,0,0],[1,0,1,0],[1,1,1,0],[0,0,0,1],[0,1,1,0],[0,1,0,1],[1,0,0,1],[1,1,0,0],[0,0,1,1],[0,1,1,0],[1,0,0,1],[1,1,0,0],[0,0,1,1],[0,1,0,0],[0,1,1,1],[0,1,0,1],[1,0,1,1],[0,0,1,0],[1,0,1,0]],[[1,0,1,0],[0,1,1,0],[1,1,0,1],[1,0,0,1],[0,1,1,0],[1,0,0,1],[0,1,0,0],[0,1,1,1],[0,0,0,1],[1,0,1,0],[1,1,0,0],[0,1,1,1],[0,0,1,1],[1,0,1,0],[0,1,1,0],[1,0,0,1],[0,1,0,0],[1,0,0,1],[1,1,1,0],[1,0,0,1]],[[1,1,1,0],[1,0,0,1],[0,1,1,0],[0,1,1,1],[1,0,0,1],[0,1,1,0],[0,0,1,1],[1,1,0,0],[0,1,0,1],[1,1,0,1],[0,1,0,1],[1,0,1,1],[1,0,0,0],[1,0,1,0],[1,0,1,0],[0,1,1,0],[0,1,0,1],[0,1,0,1],[1,0,0,1],[0,0,1,0]],[[1,0,1,0],[0,1,1,0],[1,0,0,1],[1,0,1,0],[0,1,1,0],[1,0,0,1],[1,1,0,0],[0,1,0,1],[0,1,0,1],[0,1,0,1],[0,0,1,1],[1,0,0,0],[0,0,1,0],[1,0,1,0],[1,0,1,0],[1,0,1,0],[0,1,0,0],[0,1,0,1],[0,1,1,1],[1,0,0,1]],[[1,0,1,0],[1,1,0,0],[0,0,1,1],[1,0,0,0],[1,0,1,0],[0,1,0,0],[0,1,1,1],[0,1,1,1],[0,1,0,1],[0,0,0,1],[1,0,1,0],[0,1,1,0],[1,0,0,1],[1,0,1,0],[1,1,0,0],[1,1,0,1],[0,1,0,1],[0,0,1,1],[1,1,0,0],[0,0,1,1]],[[1,0,1,0],[0,0,1,0],[1,1,0,0],[0,1,0,1],[1,0,0,1],[0,1,1,0],[1,0,0,1],[1,0,0,0],[0,1,1,0],[0,0,1,1],[1,0,1,0],[1,0,1,0],[0,1,0,0],[1,1,0,1],[0,0,1,1],[0,1,1,0],[0,0,1,1],[1,1,0,0],[0,1,0,1],[1,0,1,1]],[[1,1,0,0],[1,0,1,1],[0,1,1,0],[0,1,0,1],[0,1,0,1],[1,0,1,1],[0,1,1,0],[0,1,0,1],[1,0,0,1],[1,1,1,0],[1,0,0,1],[1,1,0,0],[0,1,0,1],[0,1,0,1],[1,0,0,1],[1,0,1,0],[1,1,0,0],[0,1,0,1],[0,1,0,1],[1,0,0,1]],[[0,0,1,0],[1,0,1,0],[1,1,0,0],[0,0,1,1],[0,0,1,0],[1,0,1,0],[1,1,0,0],[0,1,0,1],[0,0,1,1],[1,0,0,0],[0,1,1,0],[0,1,0,1],[0,1,1,1],[0,1,0,1],[0,0,0,1],[1,1,0,0],[0,0,1,1],[0,1,1,0],[0,1,1,1],[0,0,1,1]],[[1,0,1,0],[1,0,1,0],[0,1,1,0],[1,0,0,1],[1,0,1,0],[1,1,1,0],[0,1,0,1],[0,0,1,1],[1,1,0,0],[0,1,0,1],[1,0,0,1],[0,0,1,0],[1,1,0,0],[0,0,1,1],[0,1,1,0],[0,1,0,1],[1,0,0,1],[1,0,1,0],[1,0,1,0],[1,0,0,0]],[[1,0,1,0],[1,0,1,0],[1,1,0,0],[0,0,1,1],[1,0,1,0],[1,0,1,0],[0,0,1,0],[1,0,1,0],[0,1,1,0],[0,1,0,1],[0,1,1,1],[1,1,0,1],[0,0,0,1],[1,0,1,0],[1,0,1,0],[0,1,0,0],[0,1,0,1],[1,0,0,1],[1,1,0,0],[0,0,1,1]],[[1,1,1,0],[1,0,0,1],[0,1,0,0],[1,1,0,1],[1,0,1,1],[1,0,1,0],[1,1,1,0],[1,0,0,1],[1,1,1,0],[0,0,1,1],[1,0,1,0],[0,1,1,0],[0,1,0,1],[1,0,0,1],[1,0,1,0],[0,1,1,0],[0,1,0,1],[0,1,0,1],[0,1,0,1],[1,0,1,1]],[[1,1,0,0],[0,1,0,1],[0,1,0,1],[0,0,1,1],[1,0,0,0],[1,0,1,0],[1,0,1,0],[0,1,0,0],[1,0,1,1],[1,0,1,0],[1,0,0,0],[1,1,0,0],[0,1,0,1],[0,0,1,1],[1,1,0,0],[1,0,0,1],[0,1,1,0],[0,0,1,1],[0,1,1,0],[1,0,0,1]],[[0,1,1,0],[0,1,0,1],[0,0,1,1],[1,1,0,0],[0,1,0,1],[1,0,0,1],[1,1,0,0],[0,0,1,1],[1,0,0,0],[1,1,0,0],[0,1,0,1],[0,1,1,1],[0,0,1,1],[1,1,0,0],[0,1,0,1],[0,1,1,1],[1,0,0,1],[1,0,1,0],[1,0,1,0],[0,0,1,0]],[[1,1,0,0],[0,0,1,1],[1,1,0,0],[0,1,0,1],[0,1,1,1],[0,1,0,1],[0,0,0,1],[1,1,0,0],[0,1,0,1],[0,1,0,1],[0,0,1,1],[1,0,1,0],[1,1,0,0],[0,1,0,1],[0,0,1,1],[1,1,0,0],[0,0,1,1],[1,0,1,0],[1,0,1,0],[1,0,1,0]],[[0,1,1,0],[1,0,0,1],[0,1,0,0],[0,0,1,1],[1,1,0,0],[0,1,0,1],[0,1,0,1],[0,1,0,1],[0,1,0,1],[0,1,0,1],[1,0,0,1],[1,1,0,0],[0,1,0,1],[0,0,1,1],[1,0,0,0],[0,1,1,0],[1,0,0,1],[1,0,1,0],[1,0,1,0],[1,0,1,0]],[[1,0,1,0],[0,1,1,0],[0,1,0,1],[1,0,1,1],[0,1,0,0],[0,1,1,1],[0,0,1,1],[0,1,0,0],[0,1,0,1],[0,1,0,1],[0,1,0,1],[0,1,1,1],[0,0,1,1],[1,0,1,0],[0,1,1,0],[1,0,0,1],[0,1,0,0],[1,0,0,1],[1,0,1,0],[1,0,1,0]],[[1,1,0,0],[1,0,0,1],[0,1,1,0],[1,0,0,1],[0,1,1,0],[1,0,0,1],[1,0,1,0],[0,1,1,0],[0,1,0,1],[0,1,0,1],[0,0,1,1],[1,0,1,0],[1,0,1,0],[1,0,1,0],[1,1,0,0],[0,0,1,1],[0,1,1,0],[0,1,0,1],[1,0,0,1],[1,0,1,0]],[[0,1,0,0],[0,1,0,1],[1,1,0,1],[0,1,0,1],[1,0,0,1],[0,1,0,0],[1,1,0,1],[1,0,0,1],[0,1,0,0],[0,1,0,1],[1,1,0,1],[1,0,0,1],[1,1,0,0],[1,1,0,1],[0,0,0,1],[1,1,0,0],[1,1,0,1],[0,1,0,1],[0,1,0,1],[1,0,0,1]]]',
      player_path: '[[0,0],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[8,1],[9,1],[10,1],[11,1],[12,1],[12,0],[13,0],[13,1],[13,2],[13,3],[14,3],[14,4],[14,5],[13,5],[12,5],[11,5],[12,5],[13,5],[14,5],[13,5],[12,5],[11,5],[10,5],[10,6],[10,7],[11,7],[12,7],[12,6],[13,6],[14,6],[14,7],[15,7],[15,8],[15,9],[15,10],[16,10],[16,9],[16,10],[15,10],[15,9],[15,8],[15,7],[14,7],[14,6],[13,6],[12,6],[12,7],[11,7],[10,7],[10,6],[10,5],[11,5],[12,5],[13,5],[14,5],[14,4],[14,3],[13,3],[13,2],[13,1],[13,0],[12,0],[12,1],[11,1],[10,1],[9,1],[8,1],[8,0],[7,0],[6,0],[5,0],[4,0],[4,1],[3,1],[3,2],[2,2],[1,2],[0,2],[0,3],[0,4],[1,4],[1,5],[0,5],[0,6],[0,7],[0,8],[1,8],[2,8],[2,9],[3,9],[4,9],[3,9],[2,9],[2,8],[1,8],[0,8],[0,7],[1,7],[2,7],[2,6],[2,5],[3,5],[3,4],[4,4],[4,3],[4,2],[5,2],[5,1],[6,1],[6,2],[7,2],[7,3],[7,4],[6,4],[5,4],[5,5],[4,5],[4,6],[5,6],[5,7],[5,8],[5,9],[5,10],[6,10],[7,10],[8,10],[8,9],[7,9],[7,8],[8,8],[8,7],[8,6],[9,6],[9,7],[9,8],[10,8],[10,9],[10,10],[9,10],[9,11],[9,12],[10,12],[10,13],[11,13],[12,13],[12,12],[12,11],[13,11],[13,12],[13,13],[14,13],[14,14],[14,15],[15,15],[15,16],[16,16],[16,15],[17,15],[17,14],[18,14],[18,15],[19,15],[19,16],[19,17]]',
      time_started: '2020-04-01T01:20:02.499Z',
      time_ended: '2020-04-01T01:20:04.499Z',
      time_created: '2020-04-01T03:29:18.866Z',
      user_id: null,
      user_name: 'test-display-name-2',
      difficulty: 'medium'
    }
  ];
};

const seedTables = (db, users, settings, games) => {

  return db.transaction(async trx => {

    if ( users.length > 0 ) {
      // const preppedUsers = users.map(user => ({
      //   ...user
      // }));
      await trx.into('users').insert(users);
      await trx.raw(
        `SELECT setval('users_id_seq', ?)`,
        [users[users.length - 1].id]
      );
    }

    if ( settings.length > 0 ) {
      await trx.into('settings').insert(settings);
      await trx.raw(
        `SELECT setval('settings_id_seq', ?)`,
        [settings[settings.length - 1].id]
      );
    }
    
    if( games.length > 0 ) {
      await trx.into('games').insert(games);
      await trx.raw(
        `SELECT setval('games_id_seq', ?)`,
        [games[games.length - 1].id]
      );
    }

  });
};

const makeExpectedGames = (games) => {
  return games.map(game => {
    return {
      id: game.id,
      uuid: game.uuid,
      size: game.size,
      time_started: game.time_started,
      time_ended: game.time_ended,
      time_created: game.time_created,
      user_id: game.user_id,
      user_name: game.user_name,
      difficulty: game.difficulty
    }
  });
};

const makeExpectedGame = (game) => {
  return {
    ...game,
    maze: JSON.parse(game.maze),
    player_path: JSON.parse(game.player_path)
  }
};

const makeFixtures = () => {
  const testUsers = makeUsersArray();
  const testSettings = makeSettingsArray(testUsers);
  const testGames = makeGamesArray(testUsers);
  return { testUsers, testSettings, testGames };
};

module.exports = {
  cleanTables,
  seedTables,
  makeFixtures,

  makeUsersArray,
  makeSettingsArray,
  makeGamesArray,
  
  makeExpectedGames,
  makeExpectedGame
};